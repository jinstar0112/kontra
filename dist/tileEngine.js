!function(e,t,r){e.tileEngine=function(i){function a(e){var t,r;return"undefined"!=typeof e.x&&"undefined"!=typeof e.y?(t=I.getRow(e.y),r=I.getCol(e.x)):(t=e.row,r=e.col),t<0||r<0||t>=f||r>=l?-1:r+t*l}function n(e){for(var t,r,i=0,a=I.tilesets.length-1;i<=a;){if(t=(i+a)/2|0,r=I.tilesets[t],e>=r.firstGrid&&e<=r.lastGrid)return r;r.lastGrid<e?i=t+1:a=t-1}}function s(){for(var e,t,r,i,a,s,o,d,f,g,u=0;g=I.layers[b[u]];u++)for(var y=0,m=g.data.length;y<m;y++)e=g.data[y],e&&(t=n(e),r=t.image,i=y%l*h,a=(y/l|0)*c,d=e-t.firstGrid,f=r.width/h,s=d%f*h,o=(d/f|0)*c,p.drawImage(r,s,o,h,c,i,a,h,c))}if(i=i||{},!i.width||!i.height)throw Error("You must provide width and height properties");var o,d,l=i.width,f=i.height,h=i.tileWidth||i.tilewidth||32,c=i.tileHeight||i.tileheight||32,g=l*h,u=f*c,y=i.context||e.context,m=y.canvas.width,x=y.canvas.height,w=document.createElement("canvas"),p=w.getContext("2d"),v=t.max(0,g-m),G=t.max(0,u-x),b=[],I={width:l,height:f,tileWidth:h,tileHeight:c,mapWidth:g,mapHeight:u,context:y,x:i.x||0,y:i.y||0,tilesets:[],layers:{},addTilesets:function(t){r.isArray(t)||(t=[t]),t.forEach(function(t){var r,i,a,n,s,o=t.image;if(e._isImage(o))r=o;else if(e._isString(o))for(var d=1/0;d>=0;){d=o.lastIndexOf("/",d);var l=d<0?o:o.substr(d);if(e.assets.images[l]){r=e.assets.images[l];break}d--}if(!r)throw Error("You must provide an Image for the tileset");i=t.firstGrid,a=(r.width/h|0||1)*(r.height/c|0||1),i||(I.tilesets.length>0?(n=I.tilesets[I.tilesets.length-1],s=(n.image.width/h|0)*(n.image.height/c|0),i=n.firstGrid+s):i=1),I.tilesets.push({firstGrid:i,lastGrid:i+a-1,image:r}),I.tilesets.sort(function(e,t){return e.firstGrid-t.firstGrid})})},addLayers:function(e){r.isArray(e)||(e=[e]),e.forEach(function(e){e.render=void 0===e.render||e.render;var t,i,a,n,s,o;if(r.isArray(e.data[0]))for(t=[],i=0;a=e.data[i];i++)for(n=0;n<l;n++)t.push(a[n]||0);else t=e.data;I.layers[e.name]={data:t,zIndex:e.zIndex||0,render:e.render};for(s in e.properties){o=e.properties[s];try{o=JSON.parse(o)}catch(d){}I.layers[e.name][s]=o}I.layers[e.name].render&&(b.push(e.name),b.sort(function(e,t){return I.layers[e].zIndex-I.layers[t].zIndex}))}),s()},layerCollidesWith:function(e,t){for(var r,i=I.getRow(t.y),n=I.getCol(t.x),s=I.getRow(t.y+t.height),o=I.getCol(t.x+t.width),d=i;d<=s;d++)for(var l=n;l<=o;l++)if(r=a({row:d,col:l}),I.layers[e].data[r])return!0;return!1},tileAtLayer:function(e,t){var r=a(t);if(r>=0)return I.layers[e].data[r]},render:function(){I.context.drawImage(w,I.sx,I.sy,m,x,I.x,I.y,m,x)},renderLayer:function(e){for(var r,i,s,o,d,g,u,y,w,p=I.layers[e],v=I.getRow(),G=I.getCol(),b=a({row:v,col:G}),j=G*h-I.sx,O=v*c-I.sy,C=t.min(t.ceil(m/h)+1,l),E=t.min(t.ceil(x/c)+1,f),A=C*E,R=0;R<A;)s=p.data[b],s&&(o=n(s),d=o.image,r=j+R%C*h,i=O+(R/C|0)*c,g=s-o.firstGrid,u=d.width/h,y=g%u*h,w=(g/u|0)*c,I.context.drawImage(d,y,w,h,c,r,i,h,c)),++R%C===0?b=G+ ++v*l:b++},getRow:function(e){return e=e||0,(I.sy+e)/c|0},getCol:function(e){return e=e||0,(I.sx+e)/h|0},get sx(){return o},get sy(){return d},set sx(e){o=t.min(t.max(0,e),v)},set sy(e){d=t.min(t.max(0,e),G)},_layerOrder:b};I.sx=i.sx||0,I.sy=i.sy||0,w.width=g,w.height=u;for(var j in i.properties){var O=i.properties[j];try{O=JSON.parse(O)}catch(C){}I[j]=I[j]||O}return i.tilesets&&I.addTilesets(i.tilesets),i.layers&&I.addLayers(i.layers),I}}(kontra,Math,Array);